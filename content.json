{"meta":{"title":"XStarX World","subtitle":null,"description":null,"author":"Pei, Xingxin","url":"http://shiningstarpxx.github.com","root":"/"},"pages":[],"posts":[{"title":"部署elk","slug":"部署elk","date":"2019-04-02T12:39:24.000Z","updated":"2019-04-02T14:13:52.407Z","comments":true,"path":"2019/04/02/部署elk/","link":"","permalink":"http://shiningstarpxx.github.com/2019/04/02/部署elk/","excerpt":"","text":"背景elk已经成为了业界的标准日志分析系统，这里在mac os上做了一些测试验证, 这里方便以后查询，把操作过程做了记录. Installing ElasticsearchNow that we’ve made sure our system and environment have the required pieces in place, we can begin with installing the stack’s components, starting with Elasticsearch: 12brew install elasticsearch &amp;&amp; brew info elasticsearchbrew services start elasticsearch Use your favorite browser to check that it is running correctly on localhost and the default port: http://localhost:9200 The output should look something like this: 1234567891011121314151617&#123; \"name\" : \"FH0SVRp\", \"cluster_name\" : \"elasticsearch_peixingxin\", \"cluster_uuid\" : \"7uVXslqeQ_al6pZA2p0AGQ\", \"version\" : &#123; \"number\" : \"6.7.0\", \"build_flavor\" : \"oss\", \"build_type\" : \"tar\", \"build_hash\" : \"8453f77\", \"build_date\" : \"2019-03-21T15:32:29.844721Z\", \"build_snapshot\" : false, \"lucene_version\" : \"7.7.0\", \"minimum_wire_compatibility_version\" : \"5.6.0\", \"minimum_index_compatibility_version\" : \"5.0.0\" &#125;, \"tagline\" : \"You Know, for Search\"&#125; Installing LogstashYour next step is to install Logstash: 12brew install logstashbrew services start logstash Installing Kibana123brew install kibanabrew services start kibanabrew services list Open the Kibana configuration file: kibana.yml 1sudo vi /usr/local/etc/kibana/kibana.yml 12server.port: 5601elasticsearch.url: \"http://localhost:9200” If everything went well, open Kibana at http://localhost:5601/status. You should see something like this: Shipping some dataYou are ready to start sending data into Elasticsearch and enjoy all the goodness that the stack offers. To help you get started, here is an example of a Logstash pipeline sending syslog logs into the stack. First, you will need to create a new Logstash configuration file: 同时要在配置文件中增加该路径 1sudo vim //user/local/etc/logstash/syslog.conf Enter the following configuration: 12345678910111213141516171819202122232425262728input &#123; file &#123; path =&gt; [ \"/var/log/*.log\", \"/var/log/messages\", \"/var/log/syslog\" ] type =&gt; \"syslog\" &#125;&#125; filter &#123; if [type] == \"syslog\" &#123; grok &#123; match =&gt; &#123; \"message\" =&gt; \"%&#123;SYSLOGTIMESTAMP:syslog_timestamp&#125; %&#123;SYSLOGHOST:syslog_hostname&#125; %&#123;DATA:syslog_program&#125;(?:\\[%&#123;POSINT:syslog_pid&#125;\\])?: %&#123;GREEDYDATA:syslog_message&#125;\" &#125; add_field =&gt; [ \"received_at\", \"%&#123;@timestamp&#125;\" ] add_field =&gt; [ \"received_from\", \"%&#123;host&#125;\" ] &#125; syslog_pri &#123; &#125; date &#123; match =&gt; [ \"syslog_timestamp\", \"MMM d HH:mm:ss\", \"MMM dd HH:mm:ss\" ] &#125; &#125;&#125; output &#123; elasticsearch &#123; hosts =&gt; [\"127.0.0.1:9200\"] index =&gt; \"syslog-demo\" &#125; stdout &#123; codec =&gt; rubydebug &#125;&#125; 1brew services restart logstash In the Management tab in Kibana, you should see a newly created “syslog-demo” index created by the new Logstash pipeline. Reference网上比较好的文档","categories":[],"tags":[{"name":"StreamingSystem","slug":"StreamingSystem","permalink":"http://shiningstarpxx.github.com/tags/StreamingSystem/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-10-28T00:39:58.000Z","updated":"2017-10-28T00:39:58.000Z","comments":true,"path":"2017/10/28/hello-world/","link":"","permalink":"http://shiningstarpxx.github.com/2017/10/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}